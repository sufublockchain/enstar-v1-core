{
  "contractName": "IEnstarV1ProjectOwnerInvestment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "feeProtocolCP",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "feeProtocolVC",
          "type": "uint8"
        }
      ],
      "name": "setFeeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amountCPRequested",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amountVCRequested",
          "type": "uint128"
        }
      ],
      "name": "collectProtocol",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amountCP",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amountVC",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amountCPRequested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountVCRequested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountCP\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountVC\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocolCP\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocolVC\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amountCPRequested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amountVCRequested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amountCP\":\"The protocol fee collected in token0\",\"amountVC\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocolCP\":\"new protocol fee for token0 of the pool\",\"feeProtocolVC\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/project/IEnstarV1ProjectOwnerInvestment.sol\":\"IEnstarV1ProjectOwnerInvestment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/project/IEnstarV1ProjectOwnerInvestment.sol\":{\"keccak256\":\"0xf16d3a1b4a7b56b0d447d459b05de31dc9fe989f590de4d588a25e5ff3009730\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://199c3d30004b17a399645aab00b2a65f3490daaa6864434291152ff6a0b6855a\",\"dweb:/ipfs/QmdJaCYnwm97a8zqN7TDnGXT74k8bHViUZF4zPLgPp4y97\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IEnstarV1ProjectOwnerInvestment {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocolCP new protocol fee for token0 of the pool\n    /// @param feeProtocolVC new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocolCP, uint8 feeProtocolVC) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amountCPRequested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amountVCRequested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amountCP The protocol fee collected in token0\n    /// @return amountVC The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amountCPRequested,\n        uint128 amountVCRequested\n    ) external returns (uint128 amountCP, uint128 amountVC);\n}\n",
  "sourcePath": "/home/rli07/workspace/evm/enstar/v1-core/contracts/interfaces/project/IEnstarV1ProjectOwnerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/project/IEnstarV1ProjectOwnerInvestment.sol",
    "exportedSymbols": {
      "IEnstarV1ProjectOwnerInvestment": [
        1041
      ]
    },
    "id": 1042,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1017,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IEnstarV1ProjectOwnerInvestment",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1018,
          "nodeType": "StructuredDocumentation",
          "src": "71:116:12",
          "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
        },
        "fullyImplemented": false,
        "id": 1041,
        "linearizedBaseContracts": [
          1041
        ],
        "name": "IEnstarV1ProjectOwnerInvestment",
        "nameLocation": "197:31:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1019,
              "nodeType": "StructuredDocumentation",
              "src": "235:207:12",
              "text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocolCP new protocol fee for token0 of the pool\n @param feeProtocolVC new protocol fee for token1 of the pool"
            },
            "functionSelector": "8206a4d1",
            "id": 1026,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeProtocol",
            "nameLocation": "456:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "feeProtocolCP",
                  "nameLocation": "477:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "471:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "feeProtocolVC",
                  "nameLocation": "498:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "492:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:42:12"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:12"
            },
            "scope": 1041,
            "src": "447:75:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1027,
              "nodeType": "StructuredDocumentation",
              "src": "528:487:12",
              "text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amountCPRequested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amountVCRequested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amountCP The protocol fee collected in token0\n @return amountVC The protocol fee collected in token1"
            },
            "functionSelector": "85b66729",
            "id": 1040,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collectProtocol",
            "nameLocation": "1029:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1062:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1054:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "amountCPRequested",
                  "nameLocation": "1089:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1081:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "amountVCRequested",
                  "nameLocation": "1124:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1116:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:103:12"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "amountCP",
                  "nameLocation": "1174:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1166:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "amountVC",
                  "nameLocation": "1192:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1184:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:36:12"
            },
            "scope": 1041,
            "src": "1020:182:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1042,
        "src": "187:1017:12",
        "usedErrors": []
      }
    ],
    "src": "45:1160:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-16T16:04:08.848Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "collectProtocol(address,uint128,uint128)": {
        "params": {
          "amountCPRequested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
          "amountVCRequested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
          "recipient": "The address to which collected protocol fees should be sent"
        },
        "returns": {
          "amountCP": "The protocol fee collected in token0",
          "amountVC": "The protocol fee collected in token1"
        }
      },
      "setFeeProtocol(uint8,uint8)": {
        "params": {
          "feeProtocolCP": "new protocol fee for token0 of the pool",
          "feeProtocolVC": "new protocol fee for token1 of the pool"
        }
      }
    },
    "title": "Permissioned pool actions",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "collectProtocol(address,uint128,uint128)": {
        "notice": "Collect the protocol fee accrued to the pool"
      },
      "setFeeProtocol(uint8,uint8)": {
        "notice": "Set the denominator of the protocol's % share of the fees"
      }
    },
    "notice": "Contains pool methods that may only be called by the factory owner",
    "version": 1
  }
}